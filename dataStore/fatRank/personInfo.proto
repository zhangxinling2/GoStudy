syntax = "proto3";
package fatRank;

option go_package = ".";
message PersonalInformationList{
    repeated PersonalInformation items =1;
}
service RankService{
    rpc Register(PersonalInformation) returns (PersonalInformation){}
    rpc Update(PersonalInformation) returns (PersonalInformationFatRate){}
    rpc GetFR(PersonalInformation)returns (PersonRank){}
    rpc GetTop(null)returns (PersonalRanks){}
    //单次发送，多次接收
    rpc RegisterPerson(stream PersonalInformation) returns (PersonalInformationList){}
    //必须有输入，无输入就给个NULL
    rpc WatchPersons(null)returns (stream PersonalInformation){}
}

message null {}
message PersonalInformation{
    // @gotags: gorm:"primaryKey;column:id"
    int64 id=1;
    // @gotags: gorm:"column:name"
    string name=2;
    // @gotags: gorm:"column:sex"
    string sex = 3;
    // @gotags: gorm:"column:tall"
    float  tall = 4;
    // @gotags: gorm:"column:weight"
    float weight = 5;
    // @gotags: gorm:"column:age"
    int64 age = 6;
}
message PersonalInformationFatRate{
    string name=1;
    float fatRate=2;
}
message PersonalRanks{
    repeated PersonRank personalRanks=1;
}
message PersonRank{
    string name=1;
    string sex=2;
    PersonalInformationFatRate pr=3;
}